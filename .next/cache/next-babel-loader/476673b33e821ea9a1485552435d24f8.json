{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Form, Checkbox } from \"semantic-ui-react\";\nimport styles from \"../styles/Home.module.css\";\nimport { quiz } from \"../content/quiz\";\nexport default function Quiz() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState(0),\n      currentIndex = _useState2[0],\n      setCurrentIndex = _useState2[1];\n\n  var handleChange = function handleChange(e, _ref) {\n    var value = _ref.value;\n    return setValue(value);\n  };\n\n  var current = quiz[currentIndex];\n  return __jsx(\"div\", {\n    className: \"more-info-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: styles.fontandcenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Quiz\"), __jsx(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuenow\": (currentIndex + 1) / quiz.length * 100,\n    \"aria-valuemin\": \"\",\n    \"aria-valuemax\": \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, (currentIndex + 1) / quiz.length * 100, \"%\")), __jsx(Form, {\n    className: \"topspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, current ? __jsx(React.Fragment, null, __jsx(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, current.question)), current.answers.map(function (answer) {\n    return __jsx(Form.Field, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, __jsx(Checkbox, {\n      key: answer.value,\n      radio: true,\n      label: answer.txt,\n      name: \"checkboxRadioGroup\",\n      value: answer.value,\n      checked: value === answer.value,\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }));\n  })) : null));\n}\n\n_s(Quiz, \"IpH9EftAIi6kesFuMv3XdsCfYrA=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/components/Quiz.js"],"names":["React","useState","Form","Checkbox","styles","quiz","Quiz","value","setValue","currentIndex","setCurrentIndex","handleChange","e","current","fontandcenter","length","question","answers","map","answer","txt"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,mBAA/B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAAA,kBACHL,QAAQ,CAAC,EAAD,CADL;AAAA,MACtBM,KADsB;AAAA,MACfC,QADe;;AAAA,mBAEWP,QAAQ,CAAC,CAAD,CAFnB;AAAA,MAEtBQ,YAFsB;AAAA,MAERC,eAFQ;;AAI7B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD;AAAA,QAAML,KAAN,QAAMA,KAAN;AAAA,WAAkBC,QAAQ,CAACD,KAAD,CAA1B;AAAA,GAArB;;AAEA,MAAMM,OAAO,GAAGR,IAAI,CAACI,YAAD,CAApB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEL,MAAM,CAACU,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAgB,CAACL,YAAY,GAAG,CAAhB,IAAqBJ,IAAI,CAACU,MAA3B,GAAqC,GAHtD;AAIE,qBAAc,EAJhB;AAKE,qBAAc,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,CAACN,YAAY,GAAG,CAAhB,IAAqBJ,IAAI,CAACU,MAA3B,GAAqC,GAPxC,MADF,CAFF,EAaE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,GACN,4BACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,OAAO,CAACG,QAAjB,CADF,CADF,EAIGH,OAAO,CAACI,OAAR,CAAgBC,GAAhB,CAAoB,UAACC,MAAD;AAAA,WACnB,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AACE,MAAA,GAAG,EAAEA,MAAM,CAACZ,KADd;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,KAAK,EAAEY,MAAM,CAACC,GAHhB;AAIE,MAAA,IAAI,EAAC,oBAJP;AAKE,MAAA,KAAK,EAAED,MAAM,CAACZ,KALhB;AAME,MAAA,OAAO,EAAEA,KAAK,KAAKY,MAAM,CAACZ,KAN5B;AAOE,MAAA,QAAQ,EAAEI,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADmB;AAAA,GAApB,CAJH,CADM,GAmBJ,IApBN,CAbF,CADF;AAsCD;;GA7CuBL,I;;KAAAA,I","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Checkbox } from \"semantic-ui-react\";\nimport styles from \"../styles/Home.module.css\";\nimport { quiz } from \"../content/quiz\";\n\nexport default function Quiz() {\n  const [value, setValue] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const handleChange = (e, { value }) => setValue(value);\n\n  const current = quiz[currentIndex];\n  return (\n    <div className=\"more-info-modal\">\n      <h1 className={styles.fontandcenter}>Quiz</h1>\n      <div className=\"progress\">\n        <div\n          className=\"progress-bar\"\n          role=\"progressbar\"\n          aria-valuenow={((currentIndex + 1) / quiz.length) * 100}\n          aria-valuemin=\"\"\n          aria-valuemax=\"100\"\n        >\n          {((currentIndex + 1) / quiz.length) * 100}%\n        </div>\n      </div>\n      <Form className=\"topspace\">\n        {current ? (\n          <>\n            <Form.Field>\n              <strong>{current.question}</strong>\n            </Form.Field>\n            {current.answers.map((answer) => (\n              <Form.Field>\n                <Checkbox\n                  key={answer.value}\n                  radio\n                  label={answer.txt}\n                  name=\"checkboxRadioGroup\"\n                  value={answer.value}\n                  checked={value === answer.value}\n                  onChange={handleChange}\n                />\n              </Form.Field>\n            ))}\n          </>\n        ) : null}\n      </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}