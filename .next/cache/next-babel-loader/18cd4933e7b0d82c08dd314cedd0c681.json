{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/hooks/useAuth.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Provider hook that creates an auth object and handles it's state\nimport { useState, useEffect, useContext, createContext } from \"react\";\nimport { app, auth } from \"../config/firebase\";\nconst authContext = /*#__PURE__*/createContext({\n  user: {}\n});\nconst {\n  Provider\n} = authContext;\nexport function AuthProvider({\n  children\n}) {\n  const auth = useAuthProvider();\n  return __jsx(Provider, {\n    value: auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }\n  }, children);\n}\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\nconst useAuthProvider = () => {\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n\n  if (app) {\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n      }\n    });\n  }\n\n  const signIn = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      getUserAdditionalData(user);\n      return response.user;\n    }).catch(error => {\n      return {\n        error\n      };\n    });\n  };\n\n  const signOut = () => {\n    return auth.signOut().then(() => setUser(false));\n  };\n\n  const signUp = ({\n    name,\n    email,\n    password\n  }) => {\n    return auth.createUserWithEmailAndPassword(email, password).then(response => {\n      auth.currentUser.sendEmailVerification();\n      return setUser(response.user);\n    }).catch(error => {\n      return {\n        error\n      };\n    });\n  };\n\n  return {\n    user,\n    signUp\n  };\n};","map":{"version":3,"sources":["/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/hooks/useAuth.js"],"names":["useState","useEffect","useContext","createContext","app","auth","authContext","user","Provider","AuthProvider","children","useAuthProvider","useAuth","setUser","onAuthStateChanged","signIn","email","password","signInWithEmailAndPassword","then","response","getUserAdditionalData","catch","error","signOut","signUp","name","createUserWithEmailAndPassword","currentUser","sendEmailVerification"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,aAA1C,QAA+D,OAA/D;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AAEA,MAAMC,WAAW,gBAAGH,aAAa,CAAC;AAAEI,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAjC;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeF,WAArB;AAEA,OAAO,SAASG,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACzC,QAAML,IAAI,GAAGM,eAAe,EAA5B;AACA,SAAO,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBK,QAAxB,CAAP;AACD;AACD,OAAO,MAAME,OAAO,GAAG,MAAM;AAC3B,SAAOV,UAAU,CAACI,WAAD,CAAjB;AACD,CAFM;;AAIP,MAAMK,eAAe,GAAG,MAAM;AAC5B,QAAM;AAAA,OAACJ,IAAD;AAAA,OAAOM;AAAP,MAAkBb,QAAQ,CAAC,IAAD,CAAhC;;AAEA,MAAII,GAAJ,EAAS;AACPA,IAAAA,GAAG,CAACC,IAAJ,GAAWS,kBAAX,CAA8B,UAAUP,IAAV,EAAgB;AAC5C,UAAIA,IAAJ,EAAU;AACRM,QAAAA,OAAO,CAACN,IAAD,CAAP;AACD;AACF,KAJD;AAKD;;AAED,QAAMQ,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAClC,WAAOZ,IAAI,CACRa,0BADI,CACuBF,KADvB,EAC8BC,QAD9B,EAEJE,IAFI,CAEEC,QAAD,IAAc;AAClBP,MAAAA,OAAO,CAACO,QAAQ,CAACb,IAAV,CAAP;AACAc,MAAAA,qBAAqB,CAACd,IAAD,CAArB;AACA,aAAOa,QAAQ,CAACb,IAAhB;AACD,KANI,EAOJe,KAPI,CAOGC,KAAD,IAAW;AAChB,aAAO;AAAEA,QAAAA;AAAF,OAAP;AACD,KATI,CAAP;AAUD,GAXD;;AAaA,QAAMC,OAAO,GAAG,MAAM;AACpB,WAAOnB,IAAI,CAACmB,OAAL,GAAeL,IAAf,CAAoB,MAAMN,OAAO,CAAC,KAAD,CAAjC,CAAP;AACD,GAFD;;AAIA,QAAMY,MAAM,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQV,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAD,KAA+B;AAC5C,WAAOZ,IAAI,CACRsB,8BADI,CAC2BX,KAD3B,EACkCC,QADlC,EAEJE,IAFI,CAEEC,QAAD,IAAc;AAClBf,MAAAA,IAAI,CAACuB,WAAL,CAAiBC,qBAAjB;AACA,aAAOhB,OAAO,CAACO,QAAQ,CAACb,IAAV,CAAd;AACD,KALI,EAMJe,KANI,CAMGC,KAAD,IAAW;AAChB,aAAO;AAAEA,QAAAA;AAAF,OAAP;AACD,KARI,CAAP;AASD,GAVD;;AAWA,SAAO;AACLhB,IAAAA,IADK;AAELkB,IAAAA;AAFK,GAAP;AAID,CA3CD","sourcesContent":["// Provider hook that creates an auth object and handles it's state\nimport { useState, useEffect, useContext, createContext } from \"react\";\nimport { app, auth } from \"../config/firebase\";\n\nconst authContext = createContext({ user: {} });\nconst { Provider } = authContext;\n\nexport function AuthProvider({ children }) {\n  const auth = useAuthProvider();\n  return <Provider value={auth}>{children}</Provider>;\n}\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\nconst useAuthProvider = () => {\n  const [user, setUser] = useState(null);\n\n  if (app) {\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n      }\n    });\n  }\n\n  const signIn = (email, password) => {\n    return auth\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        setUser(response.user);\n        getUserAdditionalData(user);\n        return response.user;\n      })\n      .catch((error) => {\n        return { error };\n      });\n  };\n\n  const signOut = () => {\n    return auth.signOut().then(() => setUser(false));\n  };\n\n  const signUp = ({ name, email, password }) => {\n    return auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((response) => {\n        auth.currentUser.sendEmailVerification();\n        return setUser(response.user);\n      })\n      .catch((error) => {\n        return { error };\n      });\n  };\n  return {\n    user,\n    signUp,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}