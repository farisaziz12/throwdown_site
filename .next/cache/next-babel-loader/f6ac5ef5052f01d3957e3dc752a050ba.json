{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/components/Quiz.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport * as _ from \"lodash\";\nimport { Form, Checkbox } from \"semantic-ui-react\";\nimport styles from \"../styles/Home.module.css\";\nimport { quiz } from \"../content/quiz\";\nexport default function Quiz(props) {\n  const {\n    close\n  } = props;\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  const {\n    0: currentIndex,\n    1: setCurrentIndex\n  } = useState(0);\n  const {\n    0: done,\n    1: setDone\n  } = useState(false);\n  const {\n    0: chosenCategory,\n    1: setChosenCategory\n  } = useState(undefined);\n  const {\n    0: results,\n    1: setResults\n  } = useState({});\n\n  const handleChange = (e, {\n    value\n  }) => {\n    setValue(value);\n    const quizResults = JSON.parse(localStorage.getItem(\"quizResults\"));\n    quizResults[currentIndex] = value;\n    localStorage.setItem(\"quizResults\", JSON.stringify(quizResults));\n  };\n\n  const handleCalculateResult = () => {\n    const results = [];\n    const quizResults = JSON.parse(localStorage.getItem(\"quizResults\"));\n\n    const groupedCategories = _.groupBy(quizResults, \"category\");\n\n    const keys = Object.keys(groupedCategories);\n    keys.forEach(key => {\n      const points = groupedCategories[key].reduce((acc, obj) => acc + obj.points, 0);\n      results.push({\n        [key]: points\n      });\n    });\n\n    const chosenCategory = _.maxBy(results, o => o.spicy || o.ludicrous || o.fun);\n\n    if (results.spicy === 2 && results.fun === 2 && results.ludicrous === 2) {\n      setResults(results);\n    } else {\n      setChosenCategory(Object.keys(chosenCategory)[0]);\n      setResults(results);\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"quizResults\", JSON.stringify([]));\n  }, []);\n\n  const handleNext = () => {\n    const next = quiz[currentIndex + 1];\n\n    if (next) {\n      setValue(\"\");\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      setDone(true);\n      handleCalculateResult();\n    }\n  };\n\n  const current = quiz[currentIndex];\n  const percentDone = Math.round((currentIndex + 1) / quiz.length * 100);\n  return __jsx(\"div\", {\n    className: \"more-info-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: styles.fontandcenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Quiz\"), !done && __jsx(\"div\", {\n    className: \"progress topspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    style: {\n      width: `${percentDone}%`\n    },\n    \"aria-valuenow\": percentDone,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, percentDone, \"%\")), __jsx(Form, {\n    className: \"topspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, !done ? __jsx(React.Fragment, null, __jsx(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, current.question)), current.answers.map(answer => __jsx(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, __jsx(Checkbox, {\n    key: answer.value,\n    radio: true,\n    label: answer.txt,\n    name: \"checkboxRadioGroup\",\n    value: answer.value,\n    checked: value === answer.value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })))) : results && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: styles.fontandcenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Results\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Ideal category: \"), chosenCategory ? chosenCategory.replace(/^\\w/, c => c.toUpperCase()) : \"Indecisive\"), __jsx(\"div\", {\n    className: \"topspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, Object.keys(results[0])[0].replace(/^\\w/, c => c.toUpperCase()), \":\"), __jsx(\"div\", {\n    className: \"progress topspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    style: {\n      width: `${Object.values(results[0])[0] / quiz.length * 100}%`\n    },\n    \"aria-valuenow\": Object.values(results[0])[0] / quiz.length * 100,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 23\n    }\n  }, Object.values(results[0])[0] / quiz.length * 100, \"%\"))), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, Object.keys(results[1])[0].replace(/^\\w/, c => c.toUpperCase()), \":\")), __jsx(\"div\", {\n    className: \"progress topspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    style: {\n      width: `${Object.values(results[1])[0] / quiz.length * 100}%`\n    },\n    \"aria-valuenow\": Object.values(results[1])[0] / quiz.length * 100,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, Object.values(results[1])[0] / quiz.length * 100, \"%\")), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, console.log(results), Object.keys(results[2])[0].replace(/^\\w/, c => c.toUpperCase()), \":\")), __jsx(\"div\", {\n    className: \"progress topspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    style: {\n      width: `${Object.values(results[2])[0] / quiz.length * 100}%`\n    },\n    \"aria-valuenow\": Object.values(results[2])[0] / quiz.length * 100,\n    \"aria-valuemin\": \"\",\n    \"aria-valuemax\": \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, Object.values(results[2])[0] / quiz.length * 100, \"%\"))))), !done ? __jsx(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    disabled: !value,\n    onClick: handleNext,\n    type: \"button\",\n    className: \"btn btn-success center-item topspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, \"Next\")) : __jsx(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    onClick: close,\n    type: \"button\",\n    className: \"btn btn-primary center-item topspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"Done\"))));\n}","map":{"version":3,"sources":["/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/components/Quiz.js"],"names":["React","useState","useEffect","_","Form","Checkbox","styles","quiz","Quiz","props","close","value","setValue","currentIndex","setCurrentIndex","done","setDone","chosenCategory","setChosenCategory","undefined","results","setResults","handleChange","e","quizResults","JSON","parse","localStorage","getItem","setItem","stringify","handleCalculateResult","groupedCategories","groupBy","keys","Object","forEach","key","points","reduce","acc","obj","push","maxBy","o","spicy","ludicrous","fun","handleNext","next","current","percentDone","Math","round","length","fontandcenter","width","question","answers","map","answer","txt","replace","c","toUpperCase","values","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as _ from \"lodash\";\nimport { Form, Checkbox } from \"semantic-ui-react\";\nimport styles from \"../styles/Home.module.css\";\nimport { quiz } from \"../content/quiz\";\n\nexport default function Quiz(props) {\n  const { close } = props;\n  const [value, setValue] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [done, setDone] = useState(false);\n  const [chosenCategory, setChosenCategory] = useState(undefined);\n  const [results, setResults] = useState({});\n\n  const handleChange = (e, { value }) => {\n    setValue(value);\n    const quizResults = JSON.parse(localStorage.getItem(\"quizResults\"));\n    quizResults[currentIndex] = value;\n    localStorage.setItem(\"quizResults\", JSON.stringify(quizResults));\n  };\n\n  const handleCalculateResult = () => {\n    const results = [];\n    const quizResults = JSON.parse(localStorage.getItem(\"quizResults\"));\n    const groupedCategories = _.groupBy(quizResults, \"category\");\n    const keys = Object.keys(groupedCategories);\n    keys.forEach((key) => {\n      const points = groupedCategories[key].reduce(\n        (acc, obj) => acc + obj.points,\n        0\n      );\n      results.push({ [key]: points });\n    });\n\n    const chosenCategory = _.maxBy(\n      results,\n      (o) => o.spicy || o.ludicrous || o.fun\n    );\n    if (results.spicy === 2 && results.fun === 2 && results.ludicrous === 2) {\n      setResults(results);\n    } else {\n      setChosenCategory(Object.keys(chosenCategory)[0]);\n      setResults(results);\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"quizResults\", JSON.stringify([]));\n  }, []);\n\n  const handleNext = () => {\n    const next = quiz[currentIndex + 1];\n    if (next) {\n      setValue(\"\");\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      setDone(true);\n      handleCalculateResult();\n    }\n  };\n\n  const current = quiz[currentIndex];\n  const percentDone = Math.round(((currentIndex + 1) / quiz.length) * 100);\n  return (\n    <div className=\"more-info-modal\">\n      <h1 className={styles.fontandcenter}>Quiz</h1>\n      {!done && (\n        <div className=\"progress topspace\">\n          <div\n            className=\"progress-bar\"\n            role=\"progressbar\"\n            style={{ width: `${percentDone}%` }}\n            aria-valuenow={percentDone}\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n          >\n            {percentDone}%\n          </div>\n        </div>\n      )}\n      <Form className=\"topspace\">\n        {!done ? (\n          <>\n            <Form.Field>\n              <strong>{current.question}</strong>\n            </Form.Field>\n            {current.answers.map((answer) => (\n              <Form.Field>\n                <Checkbox\n                  key={answer.value}\n                  radio\n                  label={answer.txt}\n                  name=\"checkboxRadioGroup\"\n                  value={answer.value}\n                  checked={value === answer.value}\n                  onChange={handleChange}\n                />\n              </Form.Field>\n            ))}\n          </>\n        ) : (\n          results && (\n            <div>\n              <h1 className={styles.fontandcenter}>Results</h1>\n              <h2>\n                <strong>Ideal category: </strong>\n                {chosenCategory\n                  ? chosenCategory.replace(/^\\w/, (c) => c.toUpperCase())\n                  : \"Indecisive\"}\n              </h2>\n              <div className=\"topspace\">\n                <ul>\n                  <h3>\n                    <strong>\n                      {Object.keys(results[0])[0].replace(/^\\w/, (c) =>\n                        c.toUpperCase()\n                      )}\n                      :\n                    </strong>\n                    <div className=\"progress topspace\">\n                      <div\n                        className=\"progress-bar\"\n                        role=\"progressbar\"\n                        style={{\n                          width: `${\n                            (Object.values(results[0])[0] / quiz.length) * 100\n                          }%`,\n                        }}\n                        aria-valuenow={\n                          (Object.values(results[0])[0] / quiz.length) * 100\n                        }\n                        aria-valuemin=\"0\"\n                        aria-valuemax=\"100\"\n                      >\n                        {(Object.values(results[0])[0] / quiz.length) * 100}%\n                      </div>\n                    </div>\n                  </h3>\n                  <h3>\n                    <strong>\n                      {Object.keys(results[1])[0].replace(/^\\w/, (c) =>\n                        c.toUpperCase()\n                      )}\n                      :\n                    </strong>\n                  </h3>\n                  <div className=\"progress topspace\">\n                    <div\n                      className=\"progress-bar\"\n                      role=\"progressbar\"\n                      style={{\n                        width: `${\n                          (Object.values(results[1])[0] / quiz.length) * 100\n                        }%`,\n                      }}\n                      aria-valuenow={\n                        (Object.values(results[1])[0] / quiz.length) * 100\n                      }\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                    >\n                      {(Object.values(results[1])[0] / quiz.length) * 100}%\n                    </div>\n                  </div>\n                  <h3>\n                    <strong>\n                      {console.log(results)}\n                      {Object.keys(results[2])[0].replace(/^\\w/, (c) =>\n                        c.toUpperCase()\n                      )}\n                      :\n                    </strong>\n                  </h3>\n                  <div className=\"progress topspace\">\n                    <div\n                      className=\"progress-bar\"\n                      role=\"progressbar\"\n                      style={{\n                        width: `${\n                          (Object.values(results[2])[0] / quiz.length) * 100\n                        }%`,\n                      }}\n                      aria-valuenow={\n                        (Object.values(results[2])[0] / quiz.length) * 100\n                      }\n                      aria-valuemin=\"\"\n                      aria-valuemax=\"100\"\n                    >\n                      {(Object.values(results[2])[0] / quiz.length) * 100}%\n                    </div>\n                  </div>\n                </ul>\n              </div>\n            </div>\n          )\n        )}\n        {!done ? (\n          <Form.Field>\n            <button\n              disabled={!value}\n              onClick={handleNext}\n              type=\"button\"\n              className=\"btn btn-success center-item topspace\"\n            >\n              Next\n            </button>\n          </Form.Field>\n        ) : (\n          <Form.Field>\n            <button\n              onClick={close}\n              type=\"button\"\n              className=\"btn btn-primary center-item topspace\"\n            >\n              Done\n            </button>\n          </Form.Field>\n        )}\n      </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}