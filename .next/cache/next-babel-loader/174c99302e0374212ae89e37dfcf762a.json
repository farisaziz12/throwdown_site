{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport nc from \"next-connect\";\nimport users from \"../../../data/data\";\nconst handler = nc().post((req, res) => {\n  const user = _objectSpread(_objectSpread({}, JSON.parse(req.body)), {}, {\n    id: Date.now()\n  });\n\n  users.push(user);\n  res.json(user);\n}).get((req, res) => {\n  res.json(users);\n});\nexport default handler;","map":{"version":3,"sources":["/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/pages/api/user/index.js"],"names":["nc","users","handler","post","req","res","user","JSON","parse","body","id","Date","now","push","json","get"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,cAAf;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,OAAO,GAAGF,EAAE,GACfG,IADa,CACR,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClB,QAAMC,IAAI,mCACLC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACK,IAAf,CADK;AAERC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAFI,IAAV;;AAIAX,EAAAA,KAAK,CAACY,IAAN,CAAWP,IAAX;AACAD,EAAAA,GAAG,CAACS,IAAJ,CAASR,IAAT;AACD,CARa,EASbS,GATa,CAST,CAACX,GAAD,EAAMC,GAAN,KAAc;AACjBA,EAAAA,GAAG,CAACS,IAAJ,CAASb,KAAT;AACD,CAXa,CAAhB;AAaA,eAAeC,OAAf","sourcesContent":["import nc from \"next-connect\";\nimport users from \"../../../data/data\";\n\nconst handler = nc()\n  .post((req, res) => {\n    const user = {\n      ...JSON.parse(req.body),\n      id: Date.now(),\n    };\n    users.push(user);\n    res.json(user);\n  })\n  .get((req, res) => {\n    res.json(users);\n  });\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}