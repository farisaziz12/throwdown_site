{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/pages/login.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport NavBar from \"../components/Navbar\";\nimport Metadata from \"../components/Metadata\";\nimport styles from \"../styles/Home.module.css\";\nimport { app } from \"../config/firebase\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { fromEvent } from \"rxjs\";\nexport default function login() {\n  _s();\n\n  var _useState = useState(undefined),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      confirmPassword = _useState4[0],\n      setConfirmPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      firstName = _useState5[0],\n      setFirstName = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      lastName = _useState6[0],\n      setLastName = _useState6[1];\n\n  var _useState7 = useState(false),\n      noFirstName = _useState7[0],\n      setNoFirstName = _useState7[1];\n\n  var _useState8 = useState(false),\n      noLastName = _useState8[0],\n      setNoLastName = _useState8[1];\n\n  var _useState9 = useState(false),\n      noEmail = _useState9[0],\n      setNoEmail = _useState9[1];\n\n  var _useState10 = useState(false),\n      noPassword = _useState10[0],\n      setNoPassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      noConfirmPassword = _useState11[0],\n      setNoConfirmPassword = _useState11[1];\n\n  var _useState12 = useState(false),\n      createAccount = _useState12[0],\n      setCreateAccount = _useState12[1];\n\n  var router = useRouter();\n  var auth = useAuth();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.errors;\n\n  var onSubmitLogin = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              auth.signIn(email, password);\n              setNoPassword(false);\n              setNoEmail(false);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmitLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onSubmitSignup = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              auth.signIn(email, password);\n              setNoPassword(false);\n              setNoEmail(false);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSubmitSignup() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSetEmail = function handleSetEmail(event) {\n    setEmail(event.target.value);\n    var stream = fromEvent(event);\n    stream.subscribe();\n  };\n\n  useEffect(function () {\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n        console.log(user);\n      }\n    });\n  }, []);\n\n  if (user) {\n    router.push(\"/\");\n  }\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(Metadata, {\n    title: \"Xmas Throwdown Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setCreateAccount(!createAccount);\n    },\n    type: \"button\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, createAccount ? \"Have an account? Click here to login\" : \"Don't have an account? Click here to create one!\"), !createAccount ? __jsx(\"form\", {\n    className: styles.margintop,\n    onSubmit: handleSubmit(onSubmitLogin),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    name: \"email\",\n    value: email,\n    onChange: function onChange(e) {\n      if (e.target.value === \"\") {\n        setNoEmail(true);\n        setEmail(e.target.value);\n      } else {\n        setNoEmail(false);\n        handleSetEmail(e);\n      }\n    },\n    type: \"email\",\n    className: noEmail ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    ref: register({\n      required: \"Please enter an email\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Please provide an email.\"), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"If you have a wod-with-faris account you can login using that.\")), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    name: \"password\",\n    value: password,\n    onChange: function onChange(e) {\n      if (e.target.value === \"\") {\n        setNoPassword(true);\n        setPassword(e.target.value);\n      } else {\n        setNoPassword(false);\n        setPassword(e.target.value);\n      }\n    },\n    type: \"password\",\n    className: noPassword ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Please provide a password.\")), __jsx(\"div\", {\n    className: \"form-group form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Submit\")) : __jsx(\"form\", {\n    className: styles.margintop,\n    onSubmit: handleSubmit(onSubmitSignup),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"First Name\"), __jsx(\"input\", {\n    name: \"first-name\",\n    value: firstName,\n    onChange: function onChange(e) {\n      if (e.target.value === \"\") {\n        setNoFirstName(true);\n        setFirstName(e.target.value);\n      } else {\n        setNoFirstName(false);\n        setFirstName(e.target.value);\n      }\n    },\n    type: \"text\",\n    className: noFirstName ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Please provide your first name.\"), __jsx(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    name: \"last-name\",\n    value: lastName,\n    onChange: function onChange(e) {\n      if (e.target.value === \"\") {\n        setNoLastName(true);\n        setLastName(e.target.value);\n      } else {\n        setNoLastName(false);\n        setLastName(e.target.value);\n      }\n    },\n    type: \"text\",\n    className: noLastName ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \"Please provide your last name.\"), __jsx(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    name: \"email\",\n    value: email,\n    onChange: function onChange(e) {\n      if (e.target.value === \"\") {\n        setNoEmail(true);\n        setEmail(e.target.value);\n      } else {\n        setNoEmail(false);\n        setEmail(e.target.value);\n      }\n    },\n    type: \"email\",\n    className: noEmail ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, \"Please provide an email.\"), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, \"If you have a wod-with-faris account you can login using that.\")), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    name: \"password\",\n    value: password,\n    onChange: function onChange(e) {\n      if (e.target.value === \"\") {\n        setNoPassword(true);\n        setPassword(e.target.value);\n      } else {\n        setNoPassword(false);\n        setPassword(e.target.value);\n      }\n    },\n    type: \"password\",\n    className: noPassword ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputPassword1\",\n    ref: register({\n      required: \"Please enter a password\",\n      minLength: {\n        value: 6,\n        message: \"Should have at least 6 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, \"Please provide a password.\"), __jsx(\"label\", {\n    htmlFor: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    name: \"confirm-password\",\n    value: confirmPassword,\n    onChange: function onChange(e) {\n      if (e.target.value === \"\") {\n        setNoConfirmPassword(true);\n        setConfirmPassword(e.target.value);\n      } else {\n        setNoConfirmPassword(false);\n        setConfirmPassword(e.target.value);\n      }\n    },\n    type: \"password\",\n    className: noConfirmPassword ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputPassword1\",\n    ref: register({\n      required: \"Please enter a password\",\n      minLength: {\n        value: 6,\n        message: \"Should have at least 6 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, \"Please confirm password.\")), __jsx(\"div\", {\n    className: \"form-group form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, \"Create Account\"))));\n}\n\n_s(login, \"iem7qKVZqYFrOFtADYB0P8YfLUc=\", false, function () {\n  return [useRouter, useAuth, useForm];\n});","map":{"version":3,"sources":["/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/pages/login.js"],"names":["React","useState","useEffect","useRouter","useForm","NavBar","Metadata","styles","app","useAuth","fromEvent","login","undefined","user","setUser","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","noFirstName","setNoFirstName","noLastName","setNoLastName","noEmail","setNoEmail","noPassword","setNoPassword","noConfirmPassword","setNoConfirmPassword","createAccount","setCreateAccount","router","auth","register","handleSubmit","watch","errors","onSubmitLogin","signIn","onSubmitSignup","handleSetEmail","event","target","value","stream","subscribe","onAuthStateChanged","console","log","push","container","main","margintop","e","required","minLength","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport NavBar from \"../components/Navbar\";\nimport Metadata from \"../components/Metadata\";\nimport styles from \"../styles/Home.module.css\";\nimport { app } from \"../config/firebase\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { fromEvent } from \"rxjs\";\n\nexport default function login() {\n  const [user, setUser] = useState(undefined);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [noFirstName, setNoFirstName] = useState(false);\n  const [noLastName, setNoLastName] = useState(false);\n  const [noEmail, setNoEmail] = useState(false);\n  const [noPassword, setNoPassword] = useState(false);\n  const [noConfirmPassword, setNoConfirmPassword] = useState(false);\n  const [createAccount, setCreateAccount] = useState(false);\n  const router = useRouter();\n  const auth = useAuth();\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  const onSubmitLogin = async () => {\n    auth.signIn(email, password);\n    setNoPassword(false);\n    setNoEmail(false);\n  };\n\n  const onSubmitSignup = async () => {\n    auth.signIn(email, password);\n    setNoPassword(false);\n    setNoEmail(false);\n  };\n\n  const handleSetEmail = (event) => {\n    setEmail(event.target.value);\n    const stream = fromEvent(event);\n    stream.subscribe();\n  };\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n        console.log(user);\n      }\n    });\n  }, []);\n\n  if (user) {\n    router.push(\"/\");\n  }\n  return (\n    <div className={styles.container}>\n      <Metadata title=\"Xmas Throwdown Login\" />\n      <NavBar />\n      <main className={styles.main}>\n        <button\n          onClick={() => setCreateAccount(!createAccount)}\n          type=\"button\"\n          className=\"btn btn-dark\"\n        >\n          {createAccount\n            ? \"Have an account? Click here to login\"\n            : \"Don't have an account? Click here to create one!\"}\n        </button>\n        {!createAccount ? (\n          <form\n            className={styles.margintop}\n            onSubmit={handleSubmit(onSubmitLogin)}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">Email address</label>\n              <input\n                name=\"email\"\n                value={email}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoEmail(true);\n                    setEmail(e.target.value);\n                  } else {\n                    setNoEmail(false);\n                    handleSetEmail(e);\n                  }\n                }}\n                type=\"email\"\n                className={noEmail ? \"form-control is-invalid\" : \"form-control\"}\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                ref={register({\n                  required: \"Please enter an email\",\n                })}\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide an email.\n              </div>\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                If you have a wod-with-faris account you can login using that.\n              </small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\n              <input\n                name=\"password\"\n                value={password}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoPassword(true);\n                    setPassword(e.target.value);\n                  } else {\n                    setNoPassword(false);\n                    setPassword(e.target.value);\n                  }\n                }}\n                type=\"password\"\n                className={\n                  noPassword ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputPassword1\"\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide a password.\n              </div>\n            </div>\n            <div className=\"form-group form-check\"></div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        ) : (\n          <form\n            className={styles.margintop}\n            onSubmit={handleSubmit(onSubmitSignup)}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">First Name</label>\n              <input\n                name=\"first-name\"\n                value={firstName}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoFirstName(true);\n                    setFirstName(e.target.value);\n                  } else {\n                    setNoFirstName(false);\n                    setFirstName(e.target.value);\n                  }\n                }}\n                type=\"text\"\n                className={\n                  noFirstName ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide your first name.\n              </div>\n              <label htmlFor=\"exampleInputEmail1\">Last Name</label>\n              <input\n                name=\"last-name\"\n                value={lastName}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoLastName(true);\n                    setLastName(e.target.value);\n                  } else {\n                    setNoLastName(false);\n                    setLastName(e.target.value);\n                  }\n                }}\n                type=\"text\"\n                className={\n                  noLastName ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide your last name.\n              </div>\n              <label htmlFor=\"exampleInputEmail1\">Email address</label>\n              <input\n                name=\"email\"\n                value={email}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoEmail(true);\n                    setEmail(e.target.value);\n                  } else {\n                    setNoEmail(false);\n                    setEmail(e.target.value);\n                  }\n                }}\n                type=\"email\"\n                className={noEmail ? \"form-control is-invalid\" : \"form-control\"}\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide an email.\n              </div>\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                If you have a wod-with-faris account you can login using that.\n              </small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\n              <input\n                name=\"password\"\n                value={password}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoPassword(true);\n                    setPassword(e.target.value);\n                  } else {\n                    setNoPassword(false);\n                    setPassword(e.target.value);\n                  }\n                }}\n                type=\"password\"\n                className={\n                  noPassword ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputPassword1\"\n                ref={register({\n                  required: \"Please enter a password\",\n                  minLength: {\n                    value: 6,\n                    message: \"Should have at least 6 characters\",\n                  },\n                })}\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide a password.\n              </div>\n              <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n              <input\n                name=\"confirm-password\"\n                value={confirmPassword}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoConfirmPassword(true);\n                    setConfirmPassword(e.target.value);\n                  } else {\n                    setNoConfirmPassword(false);\n                    setConfirmPassword(e.target.value);\n                  }\n                }}\n                type=\"password\"\n                className={\n                  noConfirmPassword ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputPassword1\"\n                ref={register({\n                  required: \"Please enter a password\",\n                  minLength: {\n                    value: 6,\n                    message: \"Should have at least 6 characters\",\n                  },\n                })}\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please confirm password.\n              </div>\n            </div>\n            <div className=\"form-group form-check\"></div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Create Account\n            </button>\n          </form>\n        )}\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}