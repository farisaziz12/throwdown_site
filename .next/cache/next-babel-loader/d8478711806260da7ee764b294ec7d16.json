{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/pages/login.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport NavBar from \"../components/Navbar\";\nimport Metadata from \"../components/Metadata\";\nimport styles from \"../styles/Home.module.css\";\nimport { app } from \"../config/firebase\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { Subject, timer } from \"rxjs\";\nimport { debounce, filter } from \"rxjs/operators\";\nconst emailStream = new Subject();\nexport default function login() {\n  const {\n    0: user,\n    1: setUser\n  } = useState(undefined);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"\");\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState(\"\");\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState(\"\");\n  const {\n    0: noFirstName,\n    1: setNoFirstName\n  } = useState(false);\n  const {\n    0: noLastName,\n    1: setNoLastName\n  } = useState(false);\n  const {\n    0: noEmail,\n    1: setNoEmail\n  } = useState(false);\n  const {\n    0: noPassword,\n    1: setNoPassword\n  } = useState(false);\n  const {\n    0: noConfirmPassword,\n    1: setNoConfirmPassword\n  } = useState(false);\n  const {\n    0: createAccount,\n    1: setCreateAccount\n  } = useState(false);\n  const {\n    0: existingAccount,\n    1: setExitstingAccount\n  } = useState(false);\n  const {\n    0: noPasswordMatch,\n    1: setNoPasswordMatch\n  } = useState(false);\n  const router = useRouter();\n  const auth = useAuth();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  useEffect(() => {\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (password && confirmPassword) {\n      if (confirmPassword !== password) {\n        setNoPasswordMatch(true);\n      } else {\n        setNoPasswordMatch(false);\n      }\n    }\n  }, [password, confirmPassword]);\n  useEffect(() => {\n    let subscription;\n\n    if (createAccount) {\n      subscription = emailStream.pipe(filter(email => email !== \"\"), debounce(() => timer(750))).subscribe(async email => {\n        const foundAccount = await fetch(`https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${email}`).then(resp => resp.json());\n\n        if (foundAccount) {\n          setExitstingAccount(true);\n        } else {\n          setExitstingAccount(false);\n        }\n      });\n      return () => subscription.unsubscribe();\n    }\n  }, [createAccount]);\n\n  const onSubmitLogin = () => {\n    auth.signIn(email, password);\n    setNoPassword(false);\n    setNoEmail(false);\n  };\n\n  const onSubmitSignup = () => {\n    auth.signUp(firstName, lastName, email, password);\n    setNoPassword(false);\n    setNoEmail(false);\n  };\n\n  if (user) {\n    router.push(\"/\");\n  }\n\n  const formComplete = firstName && lastName && email && password && confirmPassword && noPasswordMatch === false && existingAccount == false ? true : false;\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(Metadata, {\n    title: \"Xmas Throwdown Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: () => setCreateAccount(!createAccount),\n    type: \"button\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, createAccount ? \"Have an account? Click here to login\" : \"Don't have an account? Click here to create one!\"), !createAccount ? __jsx(\"form\", {\n    className: styles.margintop,\n    onSubmit: handleSubmit(onSubmitLogin),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    name: \"email\",\n    value: email,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoEmail(true);\n        setEmail(e.target.value);\n      } else {\n        setNoEmail(false);\n        setEmail(e.target.value);\n      }\n    },\n    type: \"email\",\n    className: noEmail ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    ref: register({\n      required: \"Please enter an email\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Please provide an email.\"), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"If you have a wod-with-faris account you can login using that.\")), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    name: \"password\",\n    value: password,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoPassword(true);\n        setPassword(e.target.value);\n      } else {\n        setNoPassword(false);\n        setPassword(e.target.value);\n      }\n    },\n    type: \"password\",\n    className: noPassword ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"Please provide a password.\")), __jsx(\"div\", {\n    className: \"form-group form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Submit\")) : __jsx(\"form\", {\n    className: styles.margintop,\n    onSubmit: handleSubmit(onSubmitSignup),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputFirstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, \"First Name\"), __jsx(\"input\", {\n    name: \"first-name\",\n    value: firstName,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoFirstName(true);\n        setFirstName(e.target.value);\n      } else {\n        setNoFirstName(false);\n        setFirstName(e.target.value);\n      }\n    },\n    type: \"text\",\n    className: noFirstName ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputFirstName\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, \"Please provide your first name.\"), __jsx(\"label\", {\n    htmlFor: \"exampleInputLastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    name: \"last-name\",\n    value: lastName,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoLastName(true);\n        setLastName(e.target.value);\n      } else {\n        setNoLastName(false);\n        setLastName(e.target.value);\n      }\n    },\n    type: \"text\",\n    className: noLastName ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputLastName\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, \"Please provide your last name.\"), __jsx(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    name: \"email\",\n    value: email,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoEmail(true);\n        setEmail(e.target.value);\n      } else {\n        setNoEmail(false);\n        setEmail(e.target.value);\n        emailStream.next(e.target.value);\n      }\n    },\n    type: \"email\",\n    className: noEmail ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, \"Please provide an email.\"), existingAccount && __jsx(\"div\", {\n    class: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, \"An account with this email already exits. Try logging in.\"), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, \"If you have a wod-with-faris account you can login using that.\")), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    name: \"password\",\n    value: password,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoPassword(true);\n        setPassword(e.target.value);\n      } else {\n        setNoPassword(false);\n        setPassword(e.target.value);\n      }\n    },\n    type: \"password\",\n    className: noPassword ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputPassword1\",\n    ref: register({\n      required: \"Please enter a password\",\n      minLength: {\n        value: 6,\n        message: \"Should have at least 6 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, \"Please provide a password.\"), __jsx(\"label\", {\n    htmlFor: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    name: \"confirm-password\",\n    value: confirmPassword,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoConfirmPassword(true);\n        setConfirmPassword(e.target.value);\n      } else {\n        setNoConfirmPassword(false);\n        setConfirmPassword(e.target.value);\n      }\n    },\n    type: \"password\",\n    className: noConfirmPassword ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputPassword1\",\n    ref: register({\n      required: \"Please enter a password\",\n      minLength: {\n        value: 6,\n        message: \"Should have at least 6 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }, \"Please confirm password.\"), noPasswordMatch && __jsx(\"div\", {\n    class: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, \"Passwords do not match.\")), __jsx(\"div\", {\n    className: \"form-group form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    disabled: !formComplete,\n    type: \"submit\",\n    className: formComplete ? \"btn btn-primary\" : \"btn btn-primary disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, \"Create Account\"))));\n}","map":{"version":3,"sources":["/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/pages/login.js"],"names":["React","useState","useEffect","useRouter","useForm","NavBar","Metadata","styles","app","useAuth","Subject","timer","debounce","filter","emailStream","login","user","setUser","undefined","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","noFirstName","setNoFirstName","noLastName","setNoLastName","noEmail","setNoEmail","noPassword","setNoPassword","noConfirmPassword","setNoConfirmPassword","createAccount","setCreateAccount","existingAccount","setExitstingAccount","noPasswordMatch","setNoPasswordMatch","router","auth","register","handleSubmit","onAuthStateChanged","subscription","pipe","subscribe","foundAccount","fetch","then","resp","json","unsubscribe","onSubmitLogin","signIn","onSubmitSignup","signUp","push","formComplete","container","main","margintop","e","target","value","required","next","minLength","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport NavBar from \"../components/Navbar\";\nimport Metadata from \"../components/Metadata\";\nimport styles from \"../styles/Home.module.css\";\nimport { app } from \"../config/firebase\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { Subject, timer } from \"rxjs\";\nimport { debounce, filter } from \"rxjs/operators\";\n\nconst emailStream = new Subject();\n\nexport default function login() {\n  const [user, setUser] = useState(undefined);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [noFirstName, setNoFirstName] = useState(false);\n  const [noLastName, setNoLastName] = useState(false);\n  const [noEmail, setNoEmail] = useState(false);\n  const [noPassword, setNoPassword] = useState(false);\n  const [noConfirmPassword, setNoConfirmPassword] = useState(false);\n  const [createAccount, setCreateAccount] = useState(false);\n  const [existingAccount, setExitstingAccount] = useState(false);\n  const [noPasswordMatch, setNoPasswordMatch] = useState(false);\n\n  const router = useRouter();\n  const auth = useAuth();\n  const { register, handleSubmit } = useForm();\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (password && confirmPassword) {\n      if (confirmPassword !== password) {\n        setNoPasswordMatch(true);\n      } else {\n        setNoPasswordMatch(false);\n      }\n    }\n  }, [password, confirmPassword]);\n\n  useEffect(() => {\n    let subscription;\n    if (createAccount) {\n      subscription = emailStream\n        .pipe(\n          filter((email) => email !== \"\"),\n          debounce(() => timer(750))\n        )\n        .subscribe(async (email) => {\n          const foundAccount = await fetch(\n            `https://wod-with-faris-backend.herokuapp.com/user/getuser?email=${email}`\n          ).then((resp) => resp.json());\n          if (foundAccount) {\n            setExitstingAccount(true);\n          } else {\n            setExitstingAccount(false);\n          }\n        });\n      return () => subscription.unsubscribe();\n    }\n  }, [createAccount]);\n\n  const onSubmitLogin = () => {\n    auth.signIn(email, password);\n    setNoPassword(false);\n    setNoEmail(false);\n  };\n\n  const onSubmitSignup = () => {\n    auth.signUp(firstName, lastName, email, password);\n    setNoPassword(false);\n    setNoEmail(false);\n  };\n\n  if (user) {\n    router.push(\"/\");\n  }\n  const formComplete =\n    firstName &&\n    lastName &&\n    email &&\n    password &&\n    confirmPassword &&\n    noPasswordMatch === false &&\n    existingAccount == false\n      ? true\n      : false;\n\n  return (\n    <div className={styles.container}>\n      <Metadata title=\"Xmas Throwdown Login\" />\n      <NavBar />\n      <main className={styles.main}>\n        <button\n          onClick={() => setCreateAccount(!createAccount)}\n          type=\"button\"\n          className=\"btn btn-dark\"\n        >\n          {createAccount\n            ? \"Have an account? Click here to login\"\n            : \"Don't have an account? Click here to create one!\"}\n        </button>\n        {!createAccount ? (\n          <form\n            className={styles.margintop}\n            onSubmit={handleSubmit(onSubmitLogin)}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">Email address</label>\n              <input\n                name=\"email\"\n                value={email}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoEmail(true);\n                    setEmail(e.target.value);\n                  } else {\n                    setNoEmail(false);\n                    setEmail(e.target.value);\n                  }\n                }}\n                type=\"email\"\n                className={noEmail ? \"form-control is-invalid\" : \"form-control\"}\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                ref={register({\n                  required: \"Please enter an email\",\n                })}\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide an email.\n              </div>\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                If you have a wod-with-faris account you can login using that.\n              </small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\n              <input\n                name=\"password\"\n                value={password}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoPassword(true);\n                    setPassword(e.target.value);\n                  } else {\n                    setNoPassword(false);\n                    setPassword(e.target.value);\n                  }\n                }}\n                type=\"password\"\n                className={\n                  noPassword ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputPassword1\"\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide a password.\n              </div>\n            </div>\n            <div className=\"form-group form-check\"></div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        ) : (\n          <form\n            className={styles.margintop}\n            onSubmit={handleSubmit(onSubmitSignup)}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputFirstName\">First Name</label>\n              <input\n                name=\"first-name\"\n                value={firstName}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoFirstName(true);\n                    setFirstName(e.target.value);\n                  } else {\n                    setNoFirstName(false);\n                    setFirstName(e.target.value);\n                  }\n                }}\n                type=\"text\"\n                className={\n                  noFirstName ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputFirstName\"\n                aria-describedby=\"emailHelp\"\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide your first name.\n              </div>\n              <label htmlFor=\"exampleInputLastName\">Last Name</label>\n              <input\n                name=\"last-name\"\n                value={lastName}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoLastName(true);\n                    setLastName(e.target.value);\n                  } else {\n                    setNoLastName(false);\n                    setLastName(e.target.value);\n                  }\n                }}\n                type=\"text\"\n                className={\n                  noLastName ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputLastName\"\n                aria-describedby=\"emailHelp\"\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide your last name.\n              </div>\n              <label htmlFor=\"exampleInputEmail1\">Email address</label>\n              <input\n                name=\"email\"\n                value={email}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoEmail(true);\n                    setEmail(e.target.value);\n                  } else {\n                    setNoEmail(false);\n                    setEmail(e.target.value);\n                    emailStream.next(e.target.value);\n                  }\n                }}\n                type=\"email\"\n                className={noEmail ? \"form-control is-invalid\" : \"form-control\"}\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide an email.\n              </div>\n              {existingAccount && (\n                <div class=\"alert alert-danger\" role=\"alert\">\n                  An account with this email already exits. Try logging in.\n                </div>\n              )}\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                If you have a wod-with-faris account you can login using that.\n              </small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\n              <input\n                name=\"password\"\n                value={password}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoPassword(true);\n                    setPassword(e.target.value);\n                  } else {\n                    setNoPassword(false);\n                    setPassword(e.target.value);\n                  }\n                }}\n                type=\"password\"\n                className={\n                  noPassword ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputPassword1\"\n                ref={register({\n                  required: \"Please enter a password\",\n                  minLength: {\n                    value: 6,\n                    message: \"Should have at least 6 characters\",\n                  },\n                })}\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide a password.\n              </div>\n              <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n              <input\n                name=\"confirm-password\"\n                value={confirmPassword}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoConfirmPassword(true);\n                    setConfirmPassword(e.target.value);\n                  } else {\n                    setNoConfirmPassword(false);\n                    setConfirmPassword(e.target.value);\n                  }\n                }}\n                type=\"password\"\n                className={\n                  noConfirmPassword ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputPassword1\"\n                ref={register({\n                  required: \"Please enter a password\",\n                  minLength: {\n                    value: 6,\n                    message: \"Should have at least 6 characters\",\n                  },\n                })}\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please confirm password.\n              </div>\n              {noPasswordMatch && (\n                <div class=\"alert alert-danger\" role=\"alert\">\n                  Passwords do not match.\n                </div>\n              )}\n            </div>\n            <div className=\"form-group form-check\"></div>\n            <button\n              disabled={!formComplete}\n              type=\"submit\"\n              className={\n                formComplete ? \"btn btn-primary\" : \"btn btn-primary disabled\"\n              }\n            >\n              Create Account\n            </button>\n          </form>\n        )}\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}