{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/pages/login.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport NavBar from \"../components/Navbar\";\nimport Metadata from \"../components/Metadata\";\nimport styles from \"../styles/Home.module.css\";\nimport { app } from \"../config/firebase\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { Subject } from \"rxjs\";\nconst emailStream = new Subject();\nexport default function login() {\n  const {\n    0: user,\n    1: setUser\n  } = useState(undefined);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"\");\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState(\"\");\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState(\"\");\n  const {\n    0: noFirstName,\n    1: setNoFirstName\n  } = useState(false);\n  const {\n    0: noLastName,\n    1: setNoLastName\n  } = useState(false);\n  const {\n    0: noEmail,\n    1: setNoEmail\n  } = useState(false);\n  const {\n    0: noPassword,\n    1: setNoPassword\n  } = useState(false);\n  const {\n    0: noConfirmPassword,\n    1: setNoConfirmPassword\n  } = useState(false);\n  const {\n    0: createAccount,\n    1: setCreateAccount\n  } = useState(false);\n  const router = useRouter();\n  const auth = useAuth();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmitLogin = async () => {\n    auth.signIn(email, password);\n    setNoPassword(false);\n    setNoEmail(false);\n  };\n\n  const onSubmitSignup = async () => {\n    auth.signIn(email, password);\n    setNoPassword(false);\n    setNoEmail(false);\n  };\n\n  useEffect(() => {\n    if (createAccount) {\n      emailStream.subscribe(email => console.log(email));\n    }\n  }, [createAccount]);\n  useEffect(() => {\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n        console.log(user);\n      }\n    });\n  }, []);\n\n  if (user) {\n    router.push(\"/\");\n  }\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(Metadata, {\n    title: \"Xmas Throwdown Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: () => setCreateAccount(!createAccount),\n    type: \"button\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, createAccount ? \"Have an account? Click here to login\" : \"Don't have an account? Click here to create one!\"), !createAccount ? __jsx(\"form\", {\n    className: styles.margintop,\n    onSubmit: handleSubmit(onSubmitLogin),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    name: \"email\",\n    value: email,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoEmail(true);\n        setEmail(e.target.value);\n      } else {\n        setNoEmail(false);\n        setEmail(e.target.value);\n        emailStream.next(e.target.value);\n      }\n    },\n    type: \"email\",\n    className: noEmail ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    ref: register({\n      required: \"Please enter an email\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Please provide an email.\"), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"If you have a wod-with-faris account you can login using that.\")), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    name: \"password\",\n    value: password,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoPassword(true);\n        setPassword(e.target.value);\n      } else {\n        setNoPassword(false);\n        setPassword(e.target.value);\n      }\n    },\n    type: \"password\",\n    className: noPassword ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Please provide a password.\")), __jsx(\"div\", {\n    className: \"form-group form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Submit\")) : __jsx(\"form\", {\n    className: styles.margintop,\n    onSubmit: handleSubmit(onSubmitSignup),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputFirstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"First Name\"), __jsx(\"input\", {\n    name: \"first-name\",\n    value: firstName,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoFirstName(true);\n        setFirstName(e.target.value);\n      } else {\n        setNoFirstName(false);\n        setFirstName(e.target.value);\n      }\n    },\n    type: \"text\",\n    className: noFirstName ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputEmail2\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"Please provide your first name.\"), __jsx(\"label\", {\n    htmlFor: \"exampleInputLastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    name: \"last-name\",\n    value: lastName,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoLastName(true);\n        setLastName(e.target.value);\n      } else {\n        setNoLastName(false);\n        setLastName(e.target.value);\n      }\n    },\n    type: \"text\",\n    className: noLastName ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, \"Please provide your last name.\"), __jsx(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    name: \"email\",\n    value: email,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoEmail(true);\n        setEmail(e.target.value);\n      } else {\n        setNoEmail(false);\n        setEmail(e.target.value);\n      }\n    },\n    type: \"email\",\n    className: noEmail ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, \"Please provide an email.\"), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, \"If you have a wod-with-faris account you can login using that.\")), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    name: \"password\",\n    value: password,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoPassword(true);\n        setPassword(e.target.value);\n      } else {\n        setNoPassword(false);\n        setPassword(e.target.value);\n      }\n    },\n    type: \"password\",\n    className: noPassword ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputPassword1\",\n    ref: register({\n      required: \"Please enter a password\",\n      minLength: {\n        value: 6,\n        message: \"Should have at least 6 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, \"Please provide a password.\"), __jsx(\"label\", {\n    htmlFor: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    name: \"confirm-password\",\n    value: confirmPassword,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoConfirmPassword(true);\n        setConfirmPassword(e.target.value);\n      } else {\n        setNoConfirmPassword(false);\n        setConfirmPassword(e.target.value);\n      }\n    },\n    type: \"password\",\n    className: noConfirmPassword ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputPassword1\",\n    ref: register({\n      required: \"Please enter a password\",\n      minLength: {\n        value: 6,\n        message: \"Should have at least 6 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }, \"Please confirm password.\")), __jsx(\"div\", {\n    className: \"form-group form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"Create Account\"))));\n}","map":{"version":3,"sources":["/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/pages/login.js"],"names":["React","useState","useEffect","useRouter","useForm","NavBar","Metadata","styles","app","useAuth","Subject","emailStream","login","user","setUser","undefined","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","noFirstName","setNoFirstName","noLastName","setNoLastName","noEmail","setNoEmail","noPassword","setNoPassword","noConfirmPassword","setNoConfirmPassword","createAccount","setCreateAccount","router","auth","register","handleSubmit","watch","errors","onSubmitLogin","signIn","onSubmitSignup","subscribe","console","log","onAuthStateChanged","push","container","main","margintop","e","target","value","next","required","minLength","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport NavBar from \"../components/Navbar\";\nimport Metadata from \"../components/Metadata\";\nimport styles from \"../styles/Home.module.css\";\nimport { app } from \"../config/firebase\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { Subject } from \"rxjs\";\nconst emailStream = new Subject();\n\nexport default function login() {\n  const [user, setUser] = useState(undefined);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [noFirstName, setNoFirstName] = useState(false);\n  const [noLastName, setNoLastName] = useState(false);\n  const [noEmail, setNoEmail] = useState(false);\n  const [noPassword, setNoPassword] = useState(false);\n  const [noConfirmPassword, setNoConfirmPassword] = useState(false);\n  const [createAccount, setCreateAccount] = useState(false);\n  const router = useRouter();\n  const auth = useAuth();\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  const onSubmitLogin = async () => {\n    auth.signIn(email, password);\n    setNoPassword(false);\n    setNoEmail(false);\n  };\n\n  const onSubmitSignup = async () => {\n    auth.signIn(email, password);\n    setNoPassword(false);\n    setNoEmail(false);\n  };\n\n  useEffect(() => {\n    if (createAccount) {\n      emailStream.subscribe((email) => console.log(email));\n    }\n  }, [createAccount]);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n        console.log(user);\n      }\n    });\n  }, []);\n\n  if (user) {\n    router.push(\"/\");\n  }\n  return (\n    <div className={styles.container}>\n      <Metadata title=\"Xmas Throwdown Login\" />\n      <NavBar />\n      <main className={styles.main}>\n        <button\n          onClick={() => setCreateAccount(!createAccount)}\n          type=\"button\"\n          className=\"btn btn-dark\"\n        >\n          {createAccount\n            ? \"Have an account? Click here to login\"\n            : \"Don't have an account? Click here to create one!\"}\n        </button>\n        {!createAccount ? (\n          <form\n            className={styles.margintop}\n            onSubmit={handleSubmit(onSubmitLogin)}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">Email address</label>\n              <input\n                name=\"email\"\n                value={email}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoEmail(true);\n                    setEmail(e.target.value);\n                  } else {\n                    setNoEmail(false);\n                    setEmail(e.target.value);\n                    emailStream.next(e.target.value);\n                  }\n                }}\n                type=\"email\"\n                className={noEmail ? \"form-control is-invalid\" : \"form-control\"}\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                ref={register({\n                  required: \"Please enter an email\",\n                })}\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide an email.\n              </div>\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                If you have a wod-with-faris account you can login using that.\n              </small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\n              <input\n                name=\"password\"\n                value={password}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoPassword(true);\n                    setPassword(e.target.value);\n                  } else {\n                    setNoPassword(false);\n                    setPassword(e.target.value);\n                  }\n                }}\n                type=\"password\"\n                className={\n                  noPassword ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputPassword1\"\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide a password.\n              </div>\n            </div>\n            <div className=\"form-group form-check\"></div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        ) : (\n          <form\n            className={styles.margintop}\n            onSubmit={handleSubmit(onSubmitSignup)}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputFirstName\">First Name</label>\n              <input\n                name=\"first-name\"\n                value={firstName}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoFirstName(true);\n                    setFirstName(e.target.value);\n                  } else {\n                    setNoFirstName(false);\n                    setFirstName(e.target.value);\n                  }\n                }}\n                type=\"text\"\n                className={\n                  noFirstName ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputEmail2\"\n                aria-describedby=\"emailHelp\"\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide your first name.\n              </div>\n              <label htmlFor=\"exampleInputLastName\">Last Name</label>\n              <input\n                name=\"last-name\"\n                value={lastName}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoLastName(true);\n                    setLastName(e.target.value);\n                  } else {\n                    setNoLastName(false);\n                    setLastName(e.target.value);\n                  }\n                }}\n                type=\"text\"\n                className={\n                  noLastName ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide your last name.\n              </div>\n              <label htmlFor=\"exampleInputEmail1\">Email address</label>\n              <input\n                name=\"email\"\n                value={email}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoEmail(true);\n                    setEmail(e.target.value);\n                  } else {\n                    setNoEmail(false);\n                    setEmail(e.target.value);\n                  }\n                }}\n                type=\"email\"\n                className={noEmail ? \"form-control is-invalid\" : \"form-control\"}\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide an email.\n              </div>\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                If you have a wod-with-faris account you can login using that.\n              </small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\n              <input\n                name=\"password\"\n                value={password}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoPassword(true);\n                    setPassword(e.target.value);\n                  } else {\n                    setNoPassword(false);\n                    setPassword(e.target.value);\n                  }\n                }}\n                type=\"password\"\n                className={\n                  noPassword ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputPassword1\"\n                ref={register({\n                  required: \"Please enter a password\",\n                  minLength: {\n                    value: 6,\n                    message: \"Should have at least 6 characters\",\n                  },\n                })}\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please provide a password.\n              </div>\n              <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n              <input\n                name=\"confirm-password\"\n                value={confirmPassword}\n                onChange={(e) => {\n                  if (e.target.value === \"\") {\n                    setNoConfirmPassword(true);\n                    setConfirmPassword(e.target.value);\n                  } else {\n                    setNoConfirmPassword(false);\n                    setConfirmPassword(e.target.value);\n                  }\n                }}\n                type=\"password\"\n                className={\n                  noConfirmPassword ? \"form-control is-invalid\" : \"form-control\"\n                }\n                id=\"exampleInputPassword1\"\n                ref={register({\n                  required: \"Please enter a password\",\n                  minLength: {\n                    value: 6,\n                    message: \"Should have at least 6 characters\",\n                  },\n                })}\n              />\n              <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n                Please confirm password.\n              </div>\n            </div>\n            <div className=\"form-group form-check\"></div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Create Account\n            </button>\n          </form>\n        )}\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}