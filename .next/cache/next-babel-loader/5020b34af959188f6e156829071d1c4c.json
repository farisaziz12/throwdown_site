{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/pages/login.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport NavBar from \"../components/Navbar\";\nimport Metadata from \"../components/Metadata\";\nimport styles from \"../styles/Home.module.css\";\nimport { app } from \"../config/firebase\";\nimport { useAuth } from \"../hooks/useAuth\";\nexport default function login() {\n  const {\n    0: user,\n    1: setUser\n  } = useState(undefined);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: noEmail,\n    1: setNoEmail\n  } = useState(false);\n  const {\n    0: noPassword,\n    1: setNoPassword\n  } = useState(false);\n  const {\n    0: createAccount,\n    1: setCreateAccount\n  } = useState(false);\n  const router = useRouter();\n  const auth = useAuth();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmitLogin = async () => {\n    auth.signIn(email, password);\n    setNoPassword(false);\n    setNoEmail(false);\n  };\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n        console.log(user);\n      }\n    });\n  }, []);\n\n  if (user) {\n    router.push(\"/\");\n  }\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(Metadata, {\n    title: \"Xmas Throwdown Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: () => setCreateAccount(true),\n    type: \"button\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, createAccount ? \"Have an account? Click here to login\" : \"Don't have an account? Click here to create one!\"), __jsx(\"form\", {\n    className: styles.margintop,\n    onSubmit: handleSubmit(onSubmitLogin),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    name: \"email\",\n    value: email,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoEmail(true);\n        setEmail(e.target.value);\n      } else {\n        setNoEmail(false);\n        setEmail(e.target.value);\n      }\n    },\n    type: \"email\",\n    className: noEmail ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    ref: register({\n      required: \"Please enter an email\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Please provide an email.\"), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"If you have a wod-with-faris account you can login using that.\")), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    name: \"password\",\n    value: password,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoPassword(true);\n        setPassword(e.target.value);\n      } else {\n        setNoPassword(false);\n        setPassword(e.target.value);\n      }\n    },\n    type: \"password\",\n    className: noPassword ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputPassword1\",\n    ref: register({\n      required: \"Please enter a password\",\n      minLength: {\n        value: 6,\n        message: \"Should have at least 6 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Please provide a password.\")), __jsx(\"div\", {\n    className: \"form-group form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/pages/login.js"],"names":["React","useState","useEffect","useRouter","useForm","NavBar","Metadata","styles","app","useAuth","login","user","setUser","undefined","email","setEmail","password","setPassword","noEmail","setNoEmail","noPassword","setNoPassword","createAccount","setCreateAccount","router","auth","register","handleSubmit","watch","errors","onSubmitLogin","signIn","onAuthStateChanged","console","log","push","container","main","margintop","e","target","value","required","minLength","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAACY,SAAD,CAAhC;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACe,QAAD;AAAA,OAAWC;AAAX,MAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACiB,OAAD;AAAA,OAAUC;AAAV,MAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACmB,UAAD;AAAA,OAAaC;AAAb,MAA8BpB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACqB,aAAD;AAAA,OAAgBC;AAAhB,MAAoCtB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAMuB,MAAM,GAAGrB,SAAS,EAAxB;AACA,QAAMsB,IAAI,GAAGhB,OAAO,EAApB;AACA,QAAM;AAAEiB,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4CzB,OAAO,EAAzD;;AACA,QAAM0B,aAAa,GAAG,YAAY;AAChCL,IAAAA,IAAI,CAACM,MAAL,CAAYjB,KAAZ,EAAmBE,QAAnB;AACAK,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJD;;AAMAjB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,GAAG,CAACiB,IAAJ,GAAWO,kBAAX,CAA8B,UAAUrB,IAAV,EAAgB;AAC5C,UAAIA,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAsB,QAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ;AACD;AACF,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAIA,IAAJ,EAAU;AACRa,IAAAA,MAAM,CAACW,IAAP,CAAY,GAAZ;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAE5B,MAAM,CAAC6B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAM,IAAA,SAAS,EAAE7B,MAAM,CAAC8B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAMd,gBAAgB,CAAC,IAAD,CADjC;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAC,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,aAAa,GACV,sCADU,GAEV,kDAPN,CADF,EAUE;AACE,IAAA,SAAS,EAAEf,MAAM,CAAC+B,SADpB;AAEE,IAAA,QAAQ,EAAEX,YAAY,CAACG,aAAD,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAEhB,KAFT;AAGE,IAAA,QAAQ,EAAGyB,CAAD,IAAO;AACf,UAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,EAAvB,EAA2B;AACzBtB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,QAAAA,QAAQ,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,OAHD,MAGO;AACLtB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,QAAAA,QAAQ,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD;AACF,KAXH;AAYE,IAAA,IAAI,EAAC,OAZP;AAaE,IAAA,SAAS,EAAEvB,OAAO,GAAG,yBAAH,GAA+B,cAbnD;AAcE,IAAA,EAAE,EAAC,oBAdL;AAeE,wBAAiB,WAfnB;AAgBE,IAAA,GAAG,EAAEQ,QAAQ,CAAC;AACZgB,MAAAA,QAAQ,EAAE;AADE,KAAD,CAhBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAsBE;AAAK,IAAA,EAAE,EAAC,4BAAR;AAAqC,IAAA,SAAS,EAAC,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAtBF,EAyBE;AAAO,IAAA,EAAE,EAAC,WAAV;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAzBF,CAJF,EAiCE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAE1B,QAFT;AAGE,IAAA,QAAQ,EAAGuB,CAAD,IAAO;AACf,UAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,EAAvB,EAA2B;AACzBpB,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAJ,QAAAA,WAAW,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,OAHD,MAGO;AACLpB,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAJ,QAAAA,WAAW,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AACF,KAXH;AAYE,IAAA,IAAI,EAAC,UAZP;AAaE,IAAA,SAAS,EACPrB,UAAU,GAAG,yBAAH,GAA+B,cAd7C;AAgBE,IAAA,EAAE,EAAC,uBAhBL;AAiBE,IAAA,GAAG,EAAEM,QAAQ,CAAC;AACZgB,MAAAA,QAAQ,EAAE,yBADE;AAEZC,MAAAA,SAAS,EAAE;AACTF,QAAAA,KAAK,EAAE,CADE;AAETG,QAAAA,OAAO,EAAE;AAFA;AAFC,KAAD,CAjBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EA2BE;AAAK,IAAA,EAAE,EAAC,4BAAR;AAAqC,IAAA,SAAS,EAAC,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCA3BF,CAjCF,EAgEE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhEF,EAiEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjEF,CAVF,CAHF,CADF;AAsFD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport NavBar from \"../components/Navbar\";\nimport Metadata from \"../components/Metadata\";\nimport styles from \"../styles/Home.module.css\";\nimport { app } from \"../config/firebase\";\nimport { useAuth } from \"../hooks/useAuth\";\n\nexport default function login() {\n  const [user, setUser] = useState(undefined);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [noEmail, setNoEmail] = useState(false);\n  const [noPassword, setNoPassword] = useState(false);\n  const [createAccount, setCreateAccount] = useState(false);\n  const router = useRouter();\n  const auth = useAuth();\n  const { register, handleSubmit, watch, errors } = useForm();\n  const onSubmitLogin = async () => {\n    auth.signIn(email, password);\n    setNoPassword(false);\n    setNoEmail(false);\n  };\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n        console.log(user);\n      }\n    });\n  }, []);\n\n  if (user) {\n    router.push(\"/\");\n  }\n  return (\n    <div className={styles.container}>\n      <Metadata title=\"Xmas Throwdown Login\" />\n      <NavBar />\n      <main className={styles.main}>\n        <button\n          onClick={() => setCreateAccount(true)}\n          type=\"button\"\n          className=\"btn btn-dark\"\n        >\n          {createAccount\n            ? \"Have an account? Click here to login\"\n            : \"Don't have an account? Click here to create one!\"}\n        </button>\n        <form\n          className={styles.margintop}\n          onSubmit={handleSubmit(onSubmitLogin)}\n        >\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Email address</label>\n            <input\n              name=\"email\"\n              value={email}\n              onChange={(e) => {\n                if (e.target.value === \"\") {\n                  setNoEmail(true);\n                  setEmail(e.target.value);\n                } else {\n                  setNoEmail(false);\n                  setEmail(e.target.value);\n                }\n              }}\n              type=\"email\"\n              className={noEmail ? \"form-control is-invalid\" : \"form-control\"}\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              ref={register({\n                required: \"Please enter an email\",\n              })}\n            />\n            <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n              Please provide an email.\n            </div>\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              If you have a wod-with-faris account you can login using that.\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\n            <input\n              name=\"password\"\n              value={password}\n              onChange={(e) => {\n                if (e.target.value === \"\") {\n                  setNoPassword(true);\n                  setPassword(e.target.value);\n                } else {\n                  setNoPassword(false);\n                  setPassword(e.target.value);\n                }\n              }}\n              type=\"password\"\n              className={\n                noPassword ? \"form-control is-invalid\" : \"form-control\"\n              }\n              id=\"exampleInputPassword1\"\n              ref={register({\n                required: \"Please enter a password\",\n                minLength: {\n                  value: 6,\n                  message: \"Should have at least 6 characters\",\n                },\n              })}\n            />\n            <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n              Please provide a password.\n            </div>\n          </div>\n          <div className=\"form-group form-check\"></div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}