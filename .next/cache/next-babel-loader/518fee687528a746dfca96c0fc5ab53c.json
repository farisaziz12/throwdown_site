{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/pages/login.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport NavBar from \"../components/Navbar\";\nimport Metadata from \"../components/Metadata\";\nimport styles from \"../styles/Home.module.css\";\nimport { app } from \"../config/firebase\";\nimport { useAuth } from \"../hooks/useAuth\";\nexport default function login() {\n  const {\n    0: user,\n    1: setUser\n  } = useState(undefined);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: noEmail,\n    1: setNoEmail\n  } = useState(false);\n  const {\n    0: noPassword,\n    1: setNoPassword\n  } = useState(false);\n  const router = useRouter();\n  const auth = useAuth();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = async () => {\n    if (!email && !password) {\n      setNoEmail(true);\n      setNoPassword(true);\n    } else if (email && !password) {\n      setNoPassword(true);\n      setNoEmail(false);\n    } else if (!email && password) {\n      setNoPassword(false);\n      setNoEmail(true);\n    } else {\n      auth.signIn(email, password);\n      setNoPassword(false);\n      setNoEmail(false);\n    }\n  };\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n        console.log(user);\n      }\n    });\n  }, []);\n\n  if (user) {\n    router.push(\"/\");\n  }\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(Metadata, {\n    title: \"Xmas Throwdown Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    name: \"email\",\n    value: email,\n    onChange: e => {\n      if (e.target.value === \"\") {\n        setNoEmail(true);\n        setEmail(e.target.value);\n      } else {\n        setNoEmail(false);\n        setEmail(e.target.value);\n      }\n    },\n    type: \"email\",\n    className: noEmail ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    ref: register({\n      required: \"Please enter an email\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Please provide an email.\"), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"If you have a wod-with-faris account you can login using that.\")), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputPassword1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    name: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    className: noPassword ? \"form-control is-invalid\" : \"form-control\",\n    id: \"exampleInputPassword1\",\n    ref: register({\n      required: \"Please enter a password\",\n      minLength: {\n        value: 6,\n        message: \"Should have at least 6 characters\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    id: \"validationServer03Feedback\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Please provide a password.\")), __jsx(\"div\", {\n    className: \"form-group form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/Users/farisaziz/Desktop/Projecs/Throwdown_Site/throwdown_site/pages/login.js"],"names":["React","useState","useEffect","useRouter","useForm","NavBar","Metadata","styles","app","useAuth","login","user","setUser","undefined","email","setEmail","password","setPassword","noEmail","setNoEmail","noPassword","setNoPassword","router","auth","register","handleSubmit","watch","errors","onSubmit","signIn","onAuthStateChanged","console","log","push","container","main","e","target","value","required","minLength","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport NavBar from \"../components/Navbar\";\nimport Metadata from \"../components/Metadata\";\nimport styles from \"../styles/Home.module.css\";\nimport { app } from \"../config/firebase\";\nimport { useAuth } from \"../hooks/useAuth\";\n\nexport default function login() {\n  const [user, setUser] = useState(undefined);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [noEmail, setNoEmail] = useState(false);\n  const [noPassword, setNoPassword] = useState(false);\n  const router = useRouter();\n  const auth = useAuth();\n  const { register, handleSubmit, watch, errors } = useForm();\n  const onSubmit = async () => {\n    if (!email && !password) {\n      setNoEmail(true);\n      setNoPassword(true);\n    } else if (email && !password) {\n      setNoPassword(true);\n      setNoEmail(false);\n    } else if (!email && password) {\n      setNoPassword(false);\n      setNoEmail(true);\n    } else {\n      auth.signIn(email, password);\n      setNoPassword(false);\n      setNoEmail(false);\n    }\n  };\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n        console.log(user);\n      }\n    });\n  }, []);\n\n  if (user) {\n    router.push(\"/\");\n  }\n  return (\n    <div className={styles.container}>\n      <Metadata title=\"Xmas Throwdown Login\" />\n      <NavBar />\n      <main className={styles.main}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Email address</label>\n            <input\n              name=\"email\"\n              value={email}\n              onChange={(e) => {\n                if (e.target.value === \"\") {\n                  setNoEmail(true);\n                  setEmail(e.target.value);\n                } else {\n                  setNoEmail(false);\n                  setEmail(e.target.value);\n                }\n              }}\n              type=\"email\"\n              className={noEmail ? \"form-control is-invalid\" : \"form-control\"}\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              ref={register({\n                required: \"Please enter an email\",\n              })}\n            />\n            <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n              Please provide an email.\n            </div>\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              If you have a wod-with-faris account you can login using that.\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\n            <input\n              name=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              type=\"password\"\n              className={\n                noPassword ? \"form-control is-invalid\" : \"form-control\"\n              }\n              id=\"exampleInputPassword1\"\n              ref={register({\n                required: \"Please enter a password\",\n                minLength: {\n                  value: 6,\n                  message: \"Should have at least 6 characters\",\n                },\n              })}\n            />\n            <div id=\"validationServer03Feedback\" className=\"invalid-feedback\">\n              Please provide a password.\n            </div>\n          </div>\n          <div className=\"form-group form-check\"></div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}